// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: user.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (email, password_hash, password_algo, username)
VALUES ($1, $2, $3, $4)
RETURNING id, email, username, created_at, password_changed_at, last_login_at
`

type CreateUserParams struct {
	Email        string
	PasswordHash pgtype.Text
	PasswordAlgo string
	Username     string
}

type CreateUserRow struct {
	ID                pgtype.UUID
	Email             string
	Username          string
	CreatedAt         pgtype.Timestamptz
	PasswordChangedAt pgtype.Timestamptz
	LastLoginAt       pgtype.Timestamptz
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (CreateUserRow, error) {
	row := q.db.QueryRow(ctx, createUser,
		arg.Email,
		arg.PasswordHash,
		arg.PasswordAlgo,
		arg.Username,
	)
	var i CreateUserRow
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.Username,
		&i.CreatedAt,
		&i.PasswordChangedAt,
		&i.LastLoginAt,
	)
	return i, err
}
