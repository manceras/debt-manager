// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: user.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createUser = `-- name: CreateUser :one
SELECT register_user FROM app.register_user($1, $2, $3, $4)
`

type CreateUserParams struct {
	Email        string
	Username     string
	PasswordHash string
	PasswordAlgo string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (pgtype.UUID, error) {
	row := q.db.QueryRow(ctx, createUser,
		arg.Email,
		arg.Username,
		arg.PasswordHash,
		arg.PasswordAlgo,
	)
	var register_user pgtype.UUID
	err := row.Scan(&register_user)
	return register_user, err
}

const getUserByID = `-- name: GetUserByID :one
SELECT id, username, email, created_at, password_changed_at, last_login_at FROM app.users_safe WHERE id = $1
`

func (q *Queries) GetUserByID(ctx context.Context, id pgtype.UUID) (AppUsersSafe, error) {
	row := q.db.QueryRow(ctx, getUserByID, id)
	var i AppUsersSafe
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Email,
		&i.CreatedAt,
		&i.PasswordChangedAt,
		&i.LastLoginAt,
	)
	return i, err
}
