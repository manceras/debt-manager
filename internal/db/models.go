// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package db

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type Currency string

const (
	CurrencyUSD Currency = "USD"
	CurrencyEUR Currency = "EUR"
	CurrencyGBP Currency = "GBP"
	CurrencyJPY Currency = "JPY"
	CurrencyCNY Currency = "CNY"
)

func (e *Currency) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Currency(s)
	case string:
		*e = Currency(s)
	default:
		return fmt.Errorf("unsupported scan type for Currency: %T", src)
	}
	return nil
}

type NullCurrency struct {
	Currency Currency
	Valid    bool // Valid is true if Currency is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullCurrency) Scan(value interface{}) error {
	if value == nil {
		ns.Currency, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.Currency.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullCurrency) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.Currency), nil
}

type AppLoginSecret struct {
	ID           pgtype.UUID
	PasswordHash pgtype.Text
	PasswordAlgo string
	Email        string
}

type AppSession struct {
	ID        pgtype.UUID
	UserID    pgtype.UUID
	CreatedAt pgtype.Timestamptz
	ExpiresAt pgtype.Timestamptz
	RevokedAt pgtype.Timestamptz
	UserAgent pgtype.Text
	Ip        pgtype.Text
}

type AppUsersSafe struct {
	ID                pgtype.UUID
	Username          string
	Email             string
	CreatedAt         pgtype.Timestamptz
	PasswordChangedAt pgtype.Timestamptz
	LastLoginAt       pgtype.Timestamptz
}

type AppVMembership struct {
	UserID pgtype.UUID
	ListID pgtype.UUID
}

type Category struct {
	ID        pgtype.UUID
	Name      string
	Icon      pgtype.Text
	CreatedAt pgtype.Timestamptz
}

type Deposit struct {
	ID          pgtype.UUID
	Amount      pgtype.Numeric
	CreatedAt   pgtype.Timestamptz
	PayerUserID pgtype.UUID
	PayeeUserID pgtype.UUID
	ListID      pgtype.UUID
}

type Division struct {
	ID        pgtype.UUID
	Amount    pgtype.Numeric
	CreatedAt pgtype.Timestamptz
	OweUserID pgtype.UUID
	PaymentID pgtype.UUID
}

type List struct {
	ID        pgtype.UUID
	Currency  Currency
	Title     string
	CreatedAt pgtype.Timestamptz
}

type Payment struct {
	ID          pgtype.UUID
	Amount      pgtype.Numeric
	CreatedAt   pgtype.Timestamptz
	PhotoUrl    pgtype.Text
	PayerUserID pgtype.UUID
	ListID      pgtype.UUID
}

type PaymentsCategory struct {
	PaymentID  pgtype.UUID
	CategoryID pgtype.UUID
}

type User struct {
	ID                pgtype.UUID
	Username          string
	Email             string
	CreatedAt         pgtype.Timestamptz
	PasswordHash      pgtype.Text
	PasswordAlgo      string
	PasswordChangedAt pgtype.Timestamptz
	LastLoginAt       pgtype.Timestamptz
}

type UsersList struct {
	UserID pgtype.UUID
	ListID pgtype.UUID
}
